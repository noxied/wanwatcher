version: '3.8'

services:
  wanwatcher:
    image: noxied/wanwatcher:latest
    container_name: wanwatcher
    restart: unless-stopped
    
    environment:
      # ========================================
      # Discord Configuration
      # ========================================
      # Get your webhook from Discord Server Settings > Integrations > Webhooks
      DISCORD_WEBHOOK_URL: "https://discord.com/api/webhooks/YOUR_WEBHOOK_ID/YOUR_WEBHOOK_TOKEN"
      
      # ========================================
      # Telegram Configuration (NEW in v1.2.0)
      # ========================================
      # To enable Telegram notifications:
      # 1. Create bot with @BotFather on Telegram
      # 2. Get your bot token from @BotFather
      # 3. Get your chat ID from @userinfobot
      # 4. Set TELEGRAM_ENABLED to "true"
      TELEGRAM_ENABLED: "false"
      TELEGRAM_BOT_TOKEN: "123456789:ABCdefGHIjklMNOpqrsTUVwxyz"
      TELEGRAM_CHAT_ID: "123456789"
      TELEGRAM_PARSE_MODE: "HTML"  # HTML or Markdown
      
      # ========================================
      # Server Configuration
      # ========================================
      SERVER_NAME: "My Server"
      BOT_NAME: "WAN IP Watcher"
      CHECK_INTERVAL: "900"  # 15 minutes (in seconds)
      
      # ========================================
      # Geographic Data (Optional)
      # ========================================
      # Get free token from https://ipinfo.io/signup
      IPINFO_TOKEN: ""
      
      # ========================================
      # IPv4 & IPv6 Monitoring
      # ========================================
      MONITOR_IPV4: "true"
      MONITOR_IPV6: "true"
    
    volumes:
      # Persist IP database across container restarts
      - ./data:/data
      
      # Persist logs across container restarts
      - ./logs:/logs
    
    # ========================================
    # Health Check
    # ========================================
    healthcheck:
      test: ["CMD", "python3", "-c", "import os; exit(0 if os.path.exists('/data/ipinfo.db') else 1)"]
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # ========================================
    # Resource Limits (Optional)
    # ========================================
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 32M
    
    # ========================================
    # Logging Configuration
    # ========================================
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# ============================================
# Configuration Notes
# ============================================

# Notification Options:
# 1. Discord only: Configure DISCORD_WEBHOOK_URL, leave TELEGRAM_ENABLED="false"
# 2. Telegram only: Set TELEGRAM_ENABLED="true" + configure token/chat_id, remove Discord URL
# 3. Both platforms: Configure both (recommended for redundancy)

# At least one notification platform must be configured!

# Security Note:
# - NEVER commit your actual tokens/webhooks to version control
# - Use environment variables or docker secrets for production
# - Create a separate docker-compose.override.yml with your actual values (add to .gitignore)
